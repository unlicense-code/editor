import { IFileService } from 'vs/platform/files/common/files';
import { IEditorService } from 'vs/workbench/services/editor/common/editorService';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { ITitleService } from 'vs/workbench/services/title/common/titleService';
import { IWorkbenchThemeService } from 'vs/workbench/services/themes/common/workbenchThemeService';
import { ICommandService } from 'vs/platform/commands/common/commands';
import { IWorkspaceEditingService } from 'vs/workbench/services/workspaces/common/workspaceEditing';
import { IMenuService } from 'vs/platform/actions/common/actions';
import { Disposable } from 'vs/base/common/lifecycle';
import { ILifecycleService, ShutdownReason } from 'vs/workbench/services/lifecycle/common/lifecycle';
import { IIntegrityService } from 'vs/workbench/services/integrity/common/integrity';
import { IProductService } from 'vs/platform/product/common/productService';
import { INotificationService } from 'vs/platform/notification/common/notification';
import { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';
import { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';
import { IAccessibilityService } from 'vs/platform/accessibility/common/accessibility';
import { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { IStorageService } from 'vs/platform/storage/common/storage';
import { IOpenerService } from 'vs/platform/opener/common/opener';
import { INativeHostService } from 'vs/platform/native/electron-sandbox/native';
import { ITunnelService } from 'vs/platform/tunnel/common/tunnel';
import { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';
import { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';
import { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';
import { IRemoteAuthorityResolverService } from 'vs/platform/remote/common/remoteAuthorityResolver';
import { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';
import { IDialogService } from 'vs/platform/dialogs/common/dialogs';
import { ILogService } from 'vs/platform/log/common/log';
import { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';
import { ISharedProcessService } from 'vs/platform/ipc/electron-sandbox/services';
import { IProgressService } from 'vs/platform/progress/common/progress';
import { ILabelService } from 'vs/platform/label/common/label';
import { IBannerService } from 'vs/workbench/services/banner/browser/bannerService';
import { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';
export declare class NativeWindow extends Disposable {
    private readonly editorService;
    private readonly editorGroupService;
    private readonly configurationService;
    private readonly titleService;
    protected themeService: IWorkbenchThemeService;
    private readonly notificationService;
    private readonly commandService;
    private readonly keybindingService;
    private readonly telemetryService;
    private readonly workspaceEditingService;
    private readonly fileService;
    private readonly menuService;
    private readonly lifecycleService;
    private readonly integrityService;
    private readonly environmentService;
    private readonly accessibilityService;
    private readonly contextService;
    private readonly openerService;
    private readonly nativeHostService;
    private readonly tunnelService;
    private readonly layoutService;
    private readonly workingCopyService;
    private readonly filesConfigurationService;
    private readonly productService;
    private readonly remoteAuthorityResolverService;
    private readonly dialogService;
    private readonly storageService;
    private readonly logService;
    private readonly instantiationService;
    private readonly sharedProcessService;
    private readonly progressService;
    private readonly labelService;
    private readonly bannerService;
    private readonly uriIdentityService;
    private touchBarMenu;
    private readonly touchBarDisposables;
    private lastInstalledTouchedBar;
    private readonly customTitleContextMenuDisposable;
    private previousConfiguredZoomLevel;
    private readonly addFoldersScheduler;
    private pendingFoldersToAdd;
    private readonly closeEmptyWindowScheduler;
    private isDocumentedEdited;
    constructor(editorService: IEditorService, editorGroupService: IEditorGroupsService, configurationService: IConfigurationService, titleService: ITitleService, themeService: IWorkbenchThemeService, notificationService: INotificationService, commandService: ICommandService, keybindingService: IKeybindingService, telemetryService: ITelemetryService, workspaceEditingService: IWorkspaceEditingService, fileService: IFileService, menuService: IMenuService, lifecycleService: ILifecycleService, integrityService: IIntegrityService, environmentService: INativeWorkbenchEnvironmentService, accessibilityService: IAccessibilityService, contextService: IWorkspaceContextService, openerService: IOpenerService, nativeHostService: INativeHostService, tunnelService: ITunnelService, layoutService: IWorkbenchLayoutService, workingCopyService: IWorkingCopyService, filesConfigurationService: IFilesConfigurationService, productService: IProductService, remoteAuthorityResolverService: IRemoteAuthorityResolverService, dialogService: IDialogService, storageService: IStorageService, logService: ILogService, instantiationService: IInstantiationService, sharedProcessService: ISharedProcessService, progressService: IProgressService, labelService: ILabelService, bannerService: IBannerService, uriIdentityService: IUriIdentityService);
    private registerListeners;
    private onBeforeShutdown;
    private progressOnBeforeShutdown;
    static confirmOnShutdown(accessor: ServicesAccessor, reason: ShutdownReason): Promise<boolean>;
    private onBeforeShutdownError;
    private onWillShutdown;
    private toShutdownLabel;
    private toForceShutdownLabel;
    private onWindowResize;
    private updateDocumentEdited;
    private onDidChangeWindowMaximized;
    private getWindowMinimumWidth;
    private onDidChangePanelPosition;
    private onDidChangeVisibleEditors;
    private onDidAllEditorsClose;
    private updateWindowZoomLevel;
    private provideCustomTitleContextMenu;
    private create;
    private handleWarnings;
    private setupDriver;
    private setupOpenHandlers;
    private updateTouchbarMenu;
    private doUpdateTouchbarMenu;
    private onAddFoldersRequest;
    private doAddFolders;
    private onOpenFiles;
    private trackClosedWaitFiles;
    private openResources;
}
