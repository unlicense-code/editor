import 'vs/css!./media/panel';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { IThemeService } from 'vs/platform/theme/common/themeService';
import { ICommentService } from 'vs/workbench/contrib/comments/browser/commentService';
import { IEditorService } from 'vs/workbench/services/editor/common/editorService';
import { IViewPaneOptions, FilterViewPane } from 'vs/workbench/browser/parts/views/viewPane';
import { IViewDescriptorService } from 'vs/workbench/common/views';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
import { IContextMenuService } from 'vs/platform/contextview/browser/contextView';
import { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';
import { IOpenerService } from 'vs/platform/opener/common/opener';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';
import { ICommentsView } from 'vs/workbench/contrib/comments/browser/comments';
import { CommentsFilters } from 'vs/workbench/contrib/comments/browser/commentsViewActions';
import { IStorageService } from 'vs/platform/storage/common/storage';
import { IActivityService } from 'vs/workbench/services/activity/common/activity';
export declare class CommentsPanel extends FilterViewPane implements ICommentsView {
    private readonly editorService;
    private readonly commentService;
    private readonly uriIdentityService;
    readonly activityService: IActivityService;
    readonly storageService: IStorageService;
    private treeLabels;
    private tree;
    private treeContainer;
    private messageBoxContainer;
    private commentsModel;
    private totalComments;
    private totalUnresolved;
    private readonly hasCommentsContextKey;
    private readonly filter;
    readonly filters: CommentsFilters;
    private readonly activity;
    private currentHeight;
    private currentWidth;
    private readonly viewState;
    private readonly stateMemento;
    private cachedFilterStats;
    readonly onDidChangeVisibility: import("../../../workbench.web.main").Event<boolean>;
    constructor(options: IViewPaneOptions, instantiationService: IInstantiationService, viewDescriptorService: IViewDescriptorService, editorService: IEditorService, configurationService: IConfigurationService, contextKeyService: IContextKeyService, contextMenuService: IContextMenuService, keybindingService: IKeybindingService, openerService: IOpenerService, themeService: IThemeService, commentService: ICommentService, telemetryService: ITelemetryService, uriIdentityService: IUriIdentityService, activityService: IActivityService, storageService: IStorageService);
    private updateBadge;
    saveState(): void;
    focusFilter(): void;
    clearFilterText(): void;
    getFilterStats(): {
        total: number;
        filtered: number;
    };
    private updateFilter;
    protected renderBody(container: HTMLElement): void;
    focus(): void;
    private applyStyles;
    private renderComments;
    collapseAll(): void;
    get hasRendered(): boolean;
    protected layoutBodyContent(height?: number, width?: number): void;
    private createMessageBox;
    private renderMessage;
    private createTree;
    private openFile;
    private refresh;
    private onAllCommentsChanged;
    private onCommentsUpdated;
}
