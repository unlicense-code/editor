import { Action } from 'vs/base/common/actions';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { IContextMenuService } from 'vs/platform/contextview/browser/contextView';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IThemeService } from 'vs/platform/theme/common/themeService';
import { INotificationService } from 'vs/platform/notification/common/notification';
import { ITerminalGroupService, ITerminalService } from 'vs/workbench/contrib/terminal/browser/terminal';
import { ViewPane, IViewPaneOptions } from 'vs/workbench/browser/parts/views/viewPane';
import { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';
import { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
import { IViewDescriptorService } from 'vs/workbench/common/views';
import { IOpenerService } from 'vs/platform/opener/common/opener';
import { IMenuService } from 'vs/platform/actions/common/actions';
import { ITerminalProfileResolverService, ITerminalProfileService } from 'vs/workbench/contrib/terminal/common/terminal';
import { IActionViewItem } from 'vs/base/browser/ui/actionbar/actionbar';
import { TerminalTabbedView } from 'vs/workbench/contrib/terminal/browser/terminalTabbedView';
export declare class TerminalViewPane extends ViewPane {
    private readonly _contextKeyService;
    private readonly _configurationService;
    private readonly _contextMenuService;
    private readonly _instantiationService;
    private readonly _terminalService;
    private readonly _terminalGroupService;
    private readonly _notificationService;
    private readonly _keybindingService;
    private readonly _menuService;
    private readonly _terminalProfileService;
    private readonly _terminalProfileResolverService;
    private readonly _themeService;
    private _fontStyleElement;
    private _parentDomElement;
    private _terminalTabbedView?;
    get terminalTabbedView(): TerminalTabbedView | undefined;
    private _isWelcomeShowing;
    private _newDropdown;
    private readonly _dropdownMenu;
    private readonly _singleTabMenu;
    private _viewShowing;
    constructor(options: IViewPaneOptions, keybindingService: IKeybindingService, _contextKeyService: IContextKeyService, viewDescriptorService: IViewDescriptorService, _configurationService: IConfigurationService, _contextMenuService: IContextMenuService, _instantiationService: IInstantiationService, _terminalService: ITerminalService, _terminalGroupService: ITerminalGroupService, themeService: IThemeService, telemetryService: ITelemetryService, _notificationService: INotificationService, _keybindingService: IKeybindingService, openerService: IOpenerService, _menuService: IMenuService, _terminalProfileService: ITerminalProfileService, _terminalProfileResolverService: ITerminalProfileResolverService, _themeService: IThemeService);
    private _updateForShellIntegration;
    private _gutterDecorationsEnabled;
    private _initializeTerminal;
    renderBody(container: HTMLElement): void;
    private _createTabsView;
    protected layoutBody(height: number, width: number): void;
    getActionViewItem(action: Action): IActionViewItem | undefined;
    private _getDefaultProfileName;
    private _getKeybindingLabel;
    private _updateTabActionBar;
    focus(): void;
    shouldShowWelcome(): boolean;
}
