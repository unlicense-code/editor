import { IWorkbenchContribution } from 'vs/workbench/common/contributions';
import { IExtensionService } from 'vs/workbench/services/extensions/common/extensions';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { ILogService } from 'vs/platform/log/common/log';
import { IExtensionHostProfileService } from 'vs/workbench/contrib/extensions/electron-sandbox/runtimeExtensionsEditor';
import { INotificationService } from 'vs/platform/notification/common/notification';
import { IEditorService } from 'vs/workbench/services/editor/common/editorService';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { INativeWorkbenchEnvironmentService } from 'vs/workbench/services/environment/electron-sandbox/environmentService';
import { IFileService } from 'vs/platform/files/common/files';
import { ITimerService } from 'vs/workbench/services/timer/browser/timerService';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { IProfileAnalysisWorkerService } from 'vs/platform/profiling/electron-sandbox/profileAnalysisWorkerService';
export declare class ExtensionsAutoProfiler implements IWorkbenchContribution {
    private readonly _extensionService;
    private readonly _extensionProfileService;
    private readonly _telemetryService;
    private readonly _logService;
    private readonly _notificationService;
    private readonly _editorService;
    private readonly _instantiationService;
    private readonly _environmentServie;
    private readonly _profileAnalysisService;
    private readonly _configService;
    private readonly _fileService;
    private readonly _blame;
    private _session;
    private _unresponsiveListener;
    private _perfBaseline;
    constructor(_extensionService: IExtensionService, _extensionProfileService: IExtensionHostProfileService, _telemetryService: ITelemetryService, _logService: ILogService, _notificationService: INotificationService, _editorService: IEditorService, _instantiationService: IInstantiationService, _environmentServie: INativeWorkbenchEnvironmentService, _profileAnalysisService: IProfileAnalysisWorkerService, _configService: IConfigurationService, _fileService: IFileService, timerService: ITimerService);
    dispose(): void;
    private _onDidChangeResponsiveChange;
    private _processCpuProfile;
}
