import { Disposable } from 'vs/base/common/lifecycle';
import { ITextModelService } from 'vs/editor/common/services/resolverService';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
import { IDialogService } from 'vs/platform/dialogs/common/dialogs';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { INotificationService } from 'vs/platform/notification/common/notification';
import { IQuickInputService } from 'vs/platform/quickinput/common/quickInput';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IUserDataAutoSyncService, IUserDataSyncService, IUserDataSyncEnablementService, IUserDataSyncStoreManagementService } from 'vs/platform/userDataSync/common/userDataSync';
import { IWorkbenchContribution } from 'vs/workbench/common/contributions';
import { IOutputService } from 'vs/workbench/services/output/common/output';
import { IActivityService } from 'vs/workbench/services/activity/common/activity';
import { IEditorService } from 'vs/workbench/services/editor/common/editorService';
import { IPreferencesService } from 'vs/workbench/services/preferences/common/preferences';
import { IUserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';
import { IProductService } from 'vs/platform/product/common/productService';
import { IOpenerService } from 'vs/platform/opener/common/opener';
import { IAuthenticationService } from 'vs/workbench/services/authentication/common/authentication';
import { IUserDataSyncWorkbenchService } from 'vs/workbench/services/userDataSync/common/userDataSync';
import { IHostService } from 'vs/workbench/services/host/browser/host';
import { IUserDataProfilesService } from 'vs/platform/userDataProfile/common/userDataProfile';
import { IEnvironmentService } from 'vs/platform/environment/common/environment';
export declare class UserDataSyncWorkbenchContribution extends Disposable implements IWorkbenchContribution {
    private readonly userDataSyncEnablementService;
    private readonly userDataSyncService;
    private readonly userDataSyncWorkbenchService;
    private readonly activityService;
    private readonly notificationService;
    private readonly editorService;
    private readonly userDataProfilesService;
    private readonly dialogService;
    private readonly quickInputService;
    private readonly instantiationService;
    private readonly outputService;
    readonly authTokenService: IUserDataSyncAccountService;
    private readonly preferencesService;
    private readonly telemetryService;
    private readonly productService;
    private readonly openerService;
    private readonly authenticationService;
    private readonly userDataSyncStoreManagementService;
    private readonly configurationService;
    private readonly environmentService;
    private readonly hostService;
    private readonly turningOnSyncContext;
    private readonly globalActivityBadgeDisposable;
    private readonly accountBadgeDisposable;
    constructor(userDataSyncEnablementService: IUserDataSyncEnablementService, userDataSyncService: IUserDataSyncService, userDataSyncWorkbenchService: IUserDataSyncWorkbenchService, contextKeyService: IContextKeyService, activityService: IActivityService, notificationService: INotificationService, editorService: IEditorService, userDataProfilesService: IUserDataProfilesService, dialogService: IDialogService, quickInputService: IQuickInputService, instantiationService: IInstantiationService, outputService: IOutputService, authTokenService: IUserDataSyncAccountService, userDataAutoSyncService: IUserDataAutoSyncService, textModelResolverService: ITextModelService, preferencesService: IPreferencesService, telemetryService: ITelemetryService, productService: IProductService, openerService: IOpenerService, authenticationService: IAuthenticationService, userDataSyncStoreManagementService: IUserDataSyncStoreManagementService, configurationService: IConfigurationService, environmentService: IEnvironmentService, hostService: IHostService);
    private get turningOnSync();
    private set turningOnSync(value);
    private toKey;
    private readonly conflictsDisposables;
    private onDidChangeConflicts;
    private acceptRemote;
    private acceptLocal;
    private onAutoSyncError;
    private handleTooLargeError;
    private readonly invalidContentErrorDisposables;
    private onSynchronizerErrors;
    private handleInvalidContentError;
    private getConflictsCount;
    private updateGlobalActivityBadge;
    private updateAccountBadge;
    private turnOn;
    private askToConfigure;
    private getConfigureSyncQuickPickItems;
    private updateConfiguration;
    private configureSyncOptions;
    private turnOff;
    private disableSync;
    private showSyncActivity;
    private selectSettingsSyncService;
    private registerActions;
    private registerTurnOnSyncAction;
    private registerTurningOnSyncAction;
    private registerCancelTurnOnSyncAction;
    private registerSignInAction;
    private registerShowConflictsAction;
    private registerManageSyncAction;
    private registerEnableSyncViewsAction;
    private registerSyncNowAction;
    private registerTurnOffSyncAction;
    private registerConfigureSyncAction;
    private registerShowLogAction;
    private registerShowSettingsAction;
    private registerHelpAction;
    private registerAcceptMergesAction;
    private registerViews;
    private registerViewContainer;
    private registerResetSyncDataAction;
    private registerDataViews;
}
