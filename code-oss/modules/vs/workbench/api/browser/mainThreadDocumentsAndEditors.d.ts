import { ICodeEditor } from 'vs/editor/browser/editorBrowser';
import { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';
import { IModelService } from 'vs/editor/common/services/model';
import { ITextModelService } from 'vs/editor/common/services/resolverService';
import { IFileService } from 'vs/platform/files/common/files';
import { IExtHostContext } from 'vs/workbench/services/extensions/common/extHostCustomers';
import { MainThreadTextEditor } from 'vs/workbench/api/browser/mainThreadEditor';
import { IEditorPane } from 'vs/workbench/common/editor';
import { IEditorService } from 'vs/workbench/services/editor/common/editorService';
import { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';
import { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';
import { IWorkbenchEnvironmentService } from 'vs/workbench/services/environment/common/environmentService';
import { IWorkingCopyFileService } from 'vs/workbench/services/workingCopy/common/workingCopyFileService';
import { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';
import { IClipboardService } from 'vs/platform/clipboard/common/clipboardService';
import { IPathService } from 'vs/workbench/services/path/common/pathService';
import { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
export declare class MainThreadDocumentsAndEditors {
    private readonly _modelService;
    private readonly _textFileService;
    private readonly _editorService;
    private readonly _editorGroupService;
    private readonly _clipboardService;
    private readonly _toDispose;
    private readonly _proxy;
    private readonly _mainThreadDocuments;
    private readonly _mainThreadEditors;
    private readonly _textEditors;
    constructor(extHostContext: IExtHostContext, _modelService: IModelService, _textFileService: ITextFileService, _editorService: IEditorService, codeEditorService: ICodeEditorService, fileService: IFileService, textModelResolverService: ITextModelService, _editorGroupService: IEditorGroupsService, paneCompositeService: IPaneCompositePartService, environmentService: IWorkbenchEnvironmentService, workingCopyFileService: IWorkingCopyFileService, uriIdentityService: IUriIdentityService, _clipboardService: IClipboardService, pathService: IPathService, configurationService: IConfigurationService);
    dispose(): void;
    private _onDelta;
    private _toModelAddData;
    private _toTextEditorAddData;
    private _findEditorPosition;
    findTextEditorIdFor(editorPane: IEditorPane): string | undefined;
    getIdOfCodeEditor(codeEditor: ICodeEditor): string | undefined;
    getEditor(id: string): MainThreadTextEditor | undefined;
}
