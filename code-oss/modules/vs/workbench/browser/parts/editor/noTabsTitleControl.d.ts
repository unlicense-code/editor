import 'vs/css!./media/notabstitlecontrol';
import { IEditorPartOptions } from 'vs/workbench/common/editor';
import { EditorInput } from 'vs/workbench/common/editor/editorInput';
import { TitleControl, IToolbarActions, ITitleControlDimensions } from 'vs/workbench/browser/parts/editor/titleControl';
import { Dimension } from 'vs/base/browser/dom';
import { IEditorGroupTitleHeight } from 'vs/workbench/browser/parts/editor/editor';
export declare class NoTabsTitleControl extends TitleControl {
    private static readonly HEIGHT;
    private titleContainer;
    private editorLabel;
    private activeLabel;
    protected create(parent: HTMLElement): void;
    private registerContainerListeners;
    private onTitleLabelClick;
    private onTitleDoubleClick;
    private onTitleAuxClick;
    private onTitleTap;
    openEditor(editor: EditorInput): void;
    openEditors(editors: EditorInput[]): void;
    private doHandleOpenEditor;
    closeEditor(editor: EditorInput, index: number | undefined): void;
    closeEditors(editors: EditorInput[]): void;
    moveEditor(editor: EditorInput, fromIndex: number, targetIndex: number): void;
    pinEditor(editor: EditorInput): void;
    stickEditor(editor: EditorInput): void;
    unstickEditor(editor: EditorInput): void;
    setActive(isActive: boolean): void;
    updateEditorLabel(editor: EditorInput): void;
    updateEditorDirty(editor: EditorInput): void;
    updateOptions(oldOptions: IEditorPartOptions, newOptions: IEditorPartOptions): void;
    updateStyles(): void;
    protected handleBreadcrumbsEnablementChange(): void;
    private ifActiveEditorChanged;
    private ifActiveEditorPropertiesChanged;
    private ifEditorIsActive;
    private redraw;
    private getVerbosity;
    protected prepareEditorActions(editorActions: IToolbarActions): IToolbarActions;
    getHeight(): IEditorGroupTitleHeight;
    layout(dimensions: ITitleControlDimensions): Dimension;
}
