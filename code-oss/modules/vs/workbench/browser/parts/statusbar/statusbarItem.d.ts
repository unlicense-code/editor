import { Disposable } from 'vs/base/common/lifecycle';
import { ICommandService } from 'vs/platform/commands/common/commands';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IStatusbarEntry } from 'vs/workbench/services/statusbar/browser/statusbar';
import { IThemeService } from 'vs/platform/theme/common/themeService';
import { INotificationService } from 'vs/platform/notification/common/notification';
import { IHoverDelegate } from 'vs/base/browser/ui/iconLabel/iconHoverDelegate';
export declare class StatusbarEntryItem extends Disposable {
    private container;
    private readonly hoverDelegate;
    private readonly commandService;
    private readonly notificationService;
    private readonly telemetryService;
    private readonly themeService;
    private readonly label;
    private entry;
    private readonly foregroundListener;
    private readonly backgroundListener;
    private readonly commandMouseListener;
    private readonly commandTouchListener;
    private readonly commandKeyboardListener;
    private hover;
    readonly labelContainer: HTMLElement;
    readonly beakContainer: HTMLElement;
    get name(): string;
    get hasCommand(): boolean;
    constructor(container: HTMLElement, entry: IStatusbarEntry, hoverDelegate: IHoverDelegate, commandService: ICommandService, notificationService: INotificationService, telemetryService: ITelemetryService, themeService: IThemeService);
    update(entry: IStatusbarEntry): void;
    private isEqualTooltip;
    private executeCommand;
    private applyColor;
}
