import 'vs/css!./media/notificationsCenter';
import 'vs/css!./media/notificationsActions';
import { IThemeService, Themable } from 'vs/platform/theme/common/themeService';
import { INotificationsModel } from 'vs/workbench/common/notifications';
import { IWorkbenchLayoutService } from 'vs/workbench/services/layout/browser/layoutService';
import { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
import { INotificationsCenterController } from 'vs/workbench/browser/parts/notifications/notificationsCommands';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { Dimension } from 'vs/base/browser/dom';
import { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';
import { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';
import { INotificationService } from 'vs/platform/notification/common/notification';
export declare class NotificationsCenter extends Themable implements INotificationsCenterController {
    private readonly container;
    private readonly model;
    private readonly instantiationService;
    private readonly layoutService;
    private readonly contextKeyService;
    private readonly editorGroupService;
    private readonly keybindingService;
    private readonly notificationService;
    private static readonly MAX_DIMENSIONS;
    private readonly _onDidChangeVisibility;
    readonly onDidChangeVisibility: import("vs/base/common/event").Event<void>;
    private notificationsCenterContainer;
    private notificationsCenterHeader;
    private notificationsCenterTitle;
    private notificationsList;
    private _isVisible;
    private workbenchDimensions;
    private readonly notificationsCenterVisibleContextKey;
    private clearAllAction;
    private toggleDoNotDisturbAction;
    constructor(container: HTMLElement, model: INotificationsModel, themeService: IThemeService, instantiationService: IInstantiationService, layoutService: IWorkbenchLayoutService, contextKeyService: IContextKeyService, editorGroupService: IEditorGroupsService, keybindingService: IKeybindingService, notificationService: INotificationService);
    private registerListeners;
    private onDidChangeDoNotDisturbMode;
    get isVisible(): boolean;
    show(): void;
    private updateTitle;
    private create;
    private getKeybindingLabel;
    private onDidChangeNotification;
    hide(): void;
    protected updateStyles(): void;
    layout(dimension: Dimension | undefined): void;
    clearAll(): void;
}
